version: 2.1

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.5.0
  heroku: circleci/heroku@1.0.1


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/python:3.10.4
    working_directory: ~/project
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Tests
          command: pytest
      - run:
          name: Linting
          command: flake8

  build-and-push:
    docker:
      - image: cimg/python:3.10.4
    working_directory: ~/project
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
          docker build -t theharrypop/oc-lettings:$TAG .
          docker tag theharrypop/oc-lettings:$TAG theharrypop/oc-lettings:latest
          docker push theharrypop/oc-lettings:$TAG
          docker push theharrypop/oc-lettings:latest


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-and-test:
    jobs:
      - build-and-test:
          filters:
            branches:
              ignore: master
